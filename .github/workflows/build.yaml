name: Build / Release

on:
  push:
    branch: [ "master" ]
    paths: [ "build.env" ]
  pull_request:
    types: [ opened, reopened, synchronize ]
    paths:
      - "build.env"
      - "**.patch"
      - "scripts/lib.sh"
      - "scripts/build*.sh"
      - "scripts/fetch_sbcl_host.sh"
      - "scripts/upload_release.sh"
      - "scripts/setup_ubuntu_repos.sh"
      - "**/build.yaml"
  workflow_dispatch:

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout build scripts
        uses: actions/checkout@v3
      - name: Read build.env
        id: buildenv
        uses: falti/dotenv-action@v1
        with:
          path: build.env
          export-variables: true
          keys-case: upper
          log-variables: true
      - name: Install build deps
        run: |
          scripts/setup_ubuntu_repos.sh
          sudo apt-get -y install build-essential emacs-bin-common check
          sudo apt-get -y install libzstd-dev libssl-dev=${{env.OPENSSL_VERSION}}
      - name: Checkout libfixposix
        uses: actions/checkout@v3
        with:
          repository: sionescu/libfixposix
          ref: "v${{env.LIBFIXPOSIX_VERSION}} "
          path: libfixposix
      - name: Setup build environment
        run: |
          CUSTOM_LIBDIR="${GITHUB_WORKSPACE}/static_libs"
          mkdir -vp "${CUSTOM_LIBDIR}"
          echo "CUSTOM_LIBDIR=${CUSTOM_LIBDIR}" >> "${GITHUB_ENV}"
      - name: Build libfixposix
        run: scripts/build_libfixposix.sh "${{env.CUSTOM_LIBDIR}}"
      - name: Fetch SBCL host
        run: scripts/fetch_sbcl_host.sh "${{env.SBCL_HOST_VERSION}}"
      - name: Checkout SBCL
        uses: actions/checkout@v3
        with:
          repository: sbcl/sbcl
          ref: "sbcl-${{env.SBCL_VERSION}}"
          path: sbcl
      - name: Patch SBCL
        run: cd sbcl && patch -p1 -i ../sbcl-customizations.patch
      - name: Build SBCL
        run: scripts/build_sbcl.sh "${{env.SBCL_HOST}}" "${{env.SBCL_VERSION}}" "${{env.REVISION}}" "${{env.CUSTOM_LIBDIR}}"
      - name: 'Upload Artifacts'
        uses: actions/upload-artifact@v3
        with:
          name: tarballs
          path: |
            ${{env.SRCDIST}}
            ${{env.BINDIST}}
          retention-days: 5

  release:
    runs-on: ubuntu-20.04
    needs: build
    if: github.ref_name == 'master'
    steps:
      - name: Checkout build scripts
        uses: actions/checkout@v3
      - name: Read build.env
        id: buildenv
        uses: falti/dotenv-action@v1
        with:
          path: build.env
          log-variables: true
          mask-variables: false
      - name: Export build.env
        run: |
          echo "SBCL_HOST_VERSION=${{steps.buildenv.outputs.sbcl_host_version}}" >> ${GITHUB_ENV}
          echo "SBCL_VERSION=${{steps.buildenv.outputs.sbcl_version}}" >> ${GITHUB_ENV}
          echo "LIBFIXPOSIX_VERSION=${{steps.buildenv.outputs.libfixposix_version}}" >> ${GITHUB_ENV}
          echo "OPENSSL_VERSION=${{steps.buildenv.outputs.openssl_version}}" >> ${GITHUB_ENV}
          echo "REVISION=${{steps.buildenv.outputs.revision}}" >> ${GITHUB_ENV}
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: tarballs
      - name: Upload release
        run: scripts/upload_release.sh "${{env.SBCL_VERSION}}" "${{env.LIBFIXPOSIX_VERSION}}" "${{env.OPENSSL_VERSION}}" "${{env.REVISION}}"
